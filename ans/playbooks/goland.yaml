---
- name: Install latest GoLand IDE (minimal)
  hosts: all

  tasks:
    - name: Get latest GoLand version info
      uri:
        url: "https://data.services.jetbrains.com/products/releases?code=GO&latest=true&type=release"
        return_content: yes
      register: goland_release
      changed_when: false
      delegate_to: localhost
      run_once: true

    - name: Debug raw version info
      debug:
      msg: "Raw version info: {{ goland_release.content }}"


    - name: Extract latest version
      set_fact:
        goland_version: "{{ (goland_release.content | from_json).GO[0].version }}"
      delegate_to: localhost
      run_once: true

    - name: Debug version details
      debug:
      msg: |
        Detected GoLand version: {{ goland_version }}
        Build number: {{ goland_build }}
        Release date: {{ goland_release_date }}
        Download URL: {{ (goland_release.content | from_json).GO[0].downloads.linux.link }}

    - name: Download GoLand tarball
      get_url:
        url: "{{ (goland_release.content | from_json).GO[0].downloads.linux.link }}"
        dest: "/tmp/goland-{{ goland_version }}.tar.gz"
        mode: '0755'
        timeout: 60

    #- name: Remove previous installation if exists
    #  file:
    #    path: "/opt/GoLand-{{ goland_version }}"
    #    state: absent

    #- name: Extract GoLand to /opt
    #  become: true
    #  unarchive:
    #    src: "/tmp/goland-{{ goland_version }}.tar.gz"
    #    dest: "/opt/"
    #    remote_src: yes
    #    extra_opts: ["--strip-components=1"]
    #    mode: '0755'

    #- name: Clean up downloaded tarball
    #  file:
    #    path: "/tmp/goland-{{ goland_version }}.tar.gz"
    #    state: absent
